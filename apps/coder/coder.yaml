---
apiVersion: v1
kind: Namespace
metadata:
  name: coder
  labels:
    toolkit.fluxcd.io/tenant: sre-team
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: bitnami
  namespace: coder
spec:
  interval: 24h
  url: https://charts.bitnami.com/bitnami
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: coder-v2
  namespace: coder
spec:
  interval: 24h
  url: https://helm.coder.com/v2
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: coder-db
  namespace: coder
spec:
  interval: 30m
  chart:
    spec:
      chart: postgresql
      version: "12.1.15"
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: coder
      interval: 12h
  values:
    auth:
      username: coder
      password: coder
      database: coder
    persistence:
      size: 10Gi
---
# kubectl create secret generic coder-db-url -n coder --from-literal=url="postgres://coder:coder@coder-db-postgresql.coder.svc.hackbach.cluster:5432/coder?sslmode=disable" -o yaml
apiVersion: v1
kind: Secret
metadata:
  name: coder-db-url
  namespace: coder
type: Opaque
data:
  url: cG9zdGdyZXM6Ly9jb2Rlcjpjb2RlckBjb2Rlci1kYi1wb3N0Z3Jlc3FsLmNvZGVyLnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvY29kZXI/c3NsbW9kZT1kaXNhYmxl
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: coder
  namespace: coder
spec:
  interval: 30m
  chart:
    spec:
      chart: coder
      version: "0.17.3"
      sourceRef:
        kind: HelmRepository
        name: coder-v2
        namespace: coder
      interval: 12h
  values:
    # service:
    #   type: LoadBalancer
    #   loadBalancerIP: ""
    coder:
      env:
        - name: CODER_PG_CONNECTION_URL
          valueFrom:
            secretKeyRef:
              name: coder-db-url
              key: url
        - name: CODER_ACCESS_URL
          value: "https://coder.ii.nz"
        - name: CODER_WILDCARD_ACCESS_URL
          value: "*-coder.ii.nz"
      ingress:
        enable: true
        className: nginx
        tls:
          enable: true
        host: "coder.ii.nz"
        wildCardHost: "*-coder.ii.nz"
        service:
          type: ClusterIP
        annotations:
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.ingress.kubernetes.io/server-snippets: |
            location / {
            proxy_set_header Upgrade $http_upgrade;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header Connection "upgrade";
            proxy_cache_bypass $http_upgrade;
            }
        # - name: CODER_ACCESS_URL
        #  value: "https://coder.ii.nz"

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: coder-ii-nz
#   namespace: coder
#   labels:
#     environment: production
#   annotations:
#     cert-manager.io/cluster-issuer: ii-nz-letsencrypt-prod
#     # kubernetes.io/ingress.class: nginx
# spec:
#   ingressClassName: nginx
#   tls:
#     - hosts:
#         - "coder.ii.nz"
#   rules:
#     - host: "coder.ii.nz"
#       http:
#         paths:
#           - path: /
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: coder
#                 port:
#                   number: 80
